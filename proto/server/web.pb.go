// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/web.proto

package server // import "github.com/kooksee/grpcweb-boilerplate/proto/server"

/*
Web exposes a backend server over gRPC.
*/

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/johanbrandhorst/protobuf/proto"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type FooRequest struct {
	Text                 string   `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	Times                int32    `protobuf:"varint,2,opt,name=times,proto3" json:"times,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FooRequest) Reset()         { *m = FooRequest{} }
func (m *FooRequest) String() string { return proto.CompactTextString(m) }
func (*FooRequest) ProtoMessage()    {}
func (*FooRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_web_edd72eff1af6d0f1, []int{0}
}
func (m *FooRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FooRequest.Unmarshal(m, b)
}
func (m *FooRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FooRequest.Marshal(b, m, deterministic)
}
func (dst *FooRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FooRequest.Merge(dst, src)
}
func (m *FooRequest) XXX_Size() int {
	return xxx_messageInfo_FooRequest.Size(m)
}
func (m *FooRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FooRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FooRequest proto.InternalMessageInfo

func (m *FooRequest) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

func (m *FooRequest) GetTimes() int32 {
	if m != nil {
		return m.Times
	}
	return 0
}

type FooResponse struct {
	Text                 string   `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	Result               bool     `protobuf:"varint,2,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FooResponse) Reset()         { *m = FooResponse{} }
func (m *FooResponse) String() string { return proto.CompactTextString(m) }
func (*FooResponse) ProtoMessage()    {}
func (*FooResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_web_edd72eff1af6d0f1, []int{1}
}
func (m *FooResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FooResponse.Unmarshal(m, b)
}
func (m *FooResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FooResponse.Marshal(b, m, deterministic)
}
func (dst *FooResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FooResponse.Merge(dst, src)
}
func (m *FooResponse) XXX_Size() int {
	return xxx_messageInfo_FooResponse.Size(m)
}
func (m *FooResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_FooResponse.DiscardUnknown(m)
}

var xxx_messageInfo_FooResponse proto.InternalMessageInfo

func (m *FooResponse) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

func (m *FooResponse) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

func init() {
	proto.RegisterType((*FooRequest)(nil), "web.FooRequest")
	proto.RegisterType((*FooResponse)(nil), "web.FooResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// BackendClient is the client API for Backend service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type BackendClient interface {
	Foo(ctx context.Context, in *FooRequest, opts ...grpc.CallOption) (*FooResponse, error)
}

type backendClient struct {
	cc *grpc.ClientConn
}

func NewBackendClient(cc *grpc.ClientConn) BackendClient {
	return &backendClient{cc}
}

func (c *backendClient) Foo(ctx context.Context, in *FooRequest, opts ...grpc.CallOption) (*FooResponse, error) {
	out := new(FooResponse)
	err := c.cc.Invoke(ctx, "/web.Backend/Foo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// BackendServer is the server API for Backend service.
type BackendServer interface {
	Foo(context.Context, *FooRequest) (*FooResponse, error)
}

func RegisterBackendServer(s *grpc.Server, srv BackendServer) {
	s.RegisterService(&_Backend_serviceDesc, srv)
}

func _Backend_Foo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FooRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BackendServer).Foo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/web.Backend/Foo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BackendServer).Foo(ctx, req.(*FooRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Backend_serviceDesc = grpc.ServiceDesc{
	ServiceName: "web.Backend",
	HandlerType: (*BackendServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Foo",
			Handler:    _Backend_Foo_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/web.proto",
}

func init() { proto.RegisterFile("proto/web.proto", fileDescriptor_web_edd72eff1af6d0f1) }

var fileDescriptor_web_edd72eff1af6d0f1 = []byte{
	// 243 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x8f, 0x31, 0x4f, 0xc3, 0x30,
	0x10, 0x85, 0x15, 0x4a, 0x0b, 0x98, 0xa1, 0xc8, 0x42, 0xa8, 0xea, 0x54, 0x75, 0xca, 0x42, 0x22,
	0x11, 0x09, 0xc1, 0x86, 0x3a, 0xf4, 0x07, 0x64, 0x64, 0x8b, 0xd3, 0x47, 0x92, 0x26, 0xf5, 0x19,
	0xdf, 0x85, 0xf0, 0xdb, 0x99, 0x10, 0x4e, 0xa5, 0x32, 0xb0, 0xb0, 0xbd, 0x77, 0xba, 0x4f, 0x77,
	0x9f, 0x9a, 0x3b, 0x4f, 0x42, 0xe9, 0x00, 0x93, 0x84, 0xa4, 0x27, 0x03, 0xcc, 0xf2, 0xa9, 0x6a,
	0xa4, 0xee, 0x4d, 0x52, 0xd2, 0x21, 0xdd, 0x53, 0x5d, 0x58, 0xe3, 0x0b, 0xbb, 0xab, 0xc9, 0xb3,
	0xa4, 0x61, 0xcd, 0xf4, 0x6f, 0x63, 0x48, 0x2b, 0x72, 0x35, 0xfc, 0x9e, 0x47, 0x7c, 0xfd, 0xa8,
	0xd4, 0x96, 0x28, 0xc7, 0x7b, 0x0f, 0x16, 0xad, 0xd5, 0xb9, 0xe0, 0x53, 0x16, 0xd1, 0x2a, 0x8a,
	0xaf, 0xf2, 0x90, 0xf5, 0xad, 0x9a, 0x4a, 0x73, 0x00, 0x2f, 0xce, 0x56, 0x51, 0x3c, 0xcd, 0xc7,
	0xb2, 0x7e, 0x56, 0xd7, 0x81, 0x63, 0x47, 0x96, 0xf1, 0x27, 0x78, 0xa7, 0x66, 0x1e, 0xdc, 0x77,
	0x12, 0xc8, 0xcb, 0xfc, 0xd8, 0x1e, 0x32, 0x75, 0xb1, 0x29, 0xca, 0x16, 0x76, 0xa7, 0x63, 0x35,
	0xd9, 0x12, 0xe9, 0x79, 0xf2, 0xe3, 0x73, 0xfa, 0x63, 0x79, 0x73, 0x1a, 0x8c, 0x07, 0x36, 0xed,
	0xd7, 0x4b, 0xf6, 0x4b, 0xb2, 0x25, 0x6a, 0x19, 0x48, 0x2b, 0xef, 0xca, 0x01, 0xe6, 0xde, 0x50,
	0xd3, 0xc1, 0xbb, 0xae, 0x10, 0x1c, 0x3d, 0xcb, 0xae, 0x81, 0x95, 0xd7, 0xff, 0x41, 0x0c, 0xff,
	0x01, 0x6f, 0x66, 0xa1, 0x65, 0xdf, 0x01, 0x00, 0x00, 0xff, 0xff, 0x70, 0xa3, 0x69, 0x41, 0x6d,
	0x01, 0x00, 0x00,
}
